// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

/**
 * Content for Background Colour documents
 */
interface BackgroundColourDocumentData {
  /**
   * Colour hexcode field in *Background Colour*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Only used if background should NOT be WHITE
   * - **API ID Path**: background_colour.colour_hexcode
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  colour_hexcode: prismic.KeyTextField;
}

/**
 * Background Colour document from Prismic
 *
 * - **API ID**: `background_colour`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type BackgroundColourDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<BackgroundColourDocumentData>,
    "background_colour",
    Lang
  >;

type BlogPostDocumentDataSlicesSlice =
  | HeroBannerSlice
  | CarouselSlice
  | TextBlockSlice
  | EmailSignupFormSlice
  | ImageTextSlice
  | DividerSlice
  | CardsSlice;

/**
 * Content for Blog Post documents
 */
interface BlogPostDocumentData {
  /**
   * Slice Zone field in *Blog Post*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: blog_post.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<BlogPostDocumentDataSlicesSlice> /**
   * Meta Title field in *Blog Post*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: blog_post.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Blog Post*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: blog_post.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Blog Post*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: blog_post.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Blog Post document from Prismic
 *
 * - **API ID**: `blog_post`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type BlogPostDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<BlogPostDocumentData>,
    "blog_post",
    Lang
  >;

type HomepageDocumentDataSlicesSlice =
  | CarouselSlice
  | EmailSignupFormSlice
  | DividerSlice
  | CardsSlice
  | HeroBannerSlice
  | TextBlockSlice
  | ImageTextSlice;

/**
 * Content for Homepage documents
 */
interface HomepageDocumentData {
  /**
   * Slice Zone field in *Homepage*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<HomepageDocumentDataSlicesSlice> /**
   * Meta Title field in *Homepage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: homepage.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Homepage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: homepage.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Homepage*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Homepage document from Prismic
 *
 * - **API ID**: `homepage`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HomepageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<HomepageDocumentData>,
    "homepage",
    Lang
  >;

type PageDocumentDataSlicesSlice =
  | CarouselSlice
  | EmailSignupFormSlice
  | DividerSlice
  | CardsSlice
  | HeroBannerSlice
  | ImageTextSlice
  | TextBlockSlice;

/**
 * Content for Page documents
 */
interface PageDocumentData {
  /**
   * Slice Zone field in *Page*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: page.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<PageDocumentDataSlicesSlice> /**
   * Meta Title field in *Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: page.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: page.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Page*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: page.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Page document from Prismic
 *
 * - **API ID**: `page`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<Simplify<PageDocumentData>, "page", Lang>;

export type AllDocumentTypes =
  | BackgroundColourDocument
  | BlogPostDocument
  | HomepageDocument
  | PageDocument;

/**
 * Item in *Cards → Default → Primary → Card*
 */
export interface CardsSliceDefaultPrimaryCardItem {
  /**
   * Image field in *Cards → Default → Primary → Card*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: cards.default.primary.card[].image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Title field in *Cards → Default → Primary → Card*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: cards.default.primary.card[].title
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  title: prismic.KeyTextField;

  /**
   * Copy field in *Cards → Default → Primary → Card*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: cards.default.primary.card[].copy
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  copy: prismic.RichTextField;
}

/**
 * Primary content in *Cards → Default → Primary*
 */
export interface CardsSliceDefaultPrimary {
  /**
   * Heading field in *Cards → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: cards.default.primary.heading
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  heading: prismic.KeyTextField;

  /**
   * Description field in *Cards → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: cards.default.primary.description
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  description: prismic.RichTextField;

  /**
   * Card field in *Cards → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: cards.default.primary.card[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  card: prismic.GroupField<Simplify<CardsSliceDefaultPrimaryCardItem>>;
}

/**
 * Default variation for Cards Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type CardsSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<CardsSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *Cards*
 */
type CardsSliceVariation = CardsSliceDefault;

/**
 * Cards Shared Slice
 *
 * - **API ID**: `cards`
 * - **Description**: Cards
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type CardsSlice = prismic.SharedSlice<"cards", CardsSliceVariation>;

/**
 * Item in *Carousel → Default → Primary → Slide*
 */
export interface CarouselSliceDefaultPrimarySlideItem {
  /**
   * Quote Title field in *Carousel → Default → Primary → Slide*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: carousel.default.primary.slide[].quote_title
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  quote_title: prismic.KeyTextField;

  /**
   * Quote field in *Carousel → Default → Primary → Slide*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: carousel.default.primary.slide[].quote
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  quote: prismic.RichTextField;

  /**
   * Quotee field in *Carousel → Default → Primary → Slide*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Name of quoted person
   * - **API ID Path**: carousel.default.primary.slide[].quotee
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  quotee: prismic.KeyTextField;
}

/**
 * Primary content in *Carousel → Default → Primary*
 */
export interface CarouselSliceDefaultPrimary {
  /**
   * Heading field in *Carousel → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: carousel.default.primary.heading
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  heading: prismic.KeyTextField;

  /**
   * Slide field in *Carousel → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: carousel.default.primary.slide[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  slide: prismic.GroupField<Simplify<CarouselSliceDefaultPrimarySlideItem>>;

  /**
   * Background Colour field in *Carousel → Default → Primary*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: carousel.default.primary.background_colour
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  background_colour: prismic.ContentRelationshipField<"background_colour">;
}

/**
 * Default variation for Carousel Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type CarouselSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<CarouselSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *Carousel*
 */
type CarouselSliceVariation = CarouselSliceDefault;

/**
 * Carousel Shared Slice
 *
 * - **API ID**: `carousel`
 * - **Description**: Carousel
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type CarouselSlice = prismic.SharedSlice<
  "carousel",
  CarouselSliceVariation
>;

/**
 * Default variation for Divider Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type DividerSliceDefault = prismic.SharedSliceVariation<
  "default",
  Record<string, never>,
  never
>;

/**
 * Slice variation for *Divider*
 */
type DividerSliceVariation = DividerSliceDefault;

/**
 * Divider Shared Slice
 *
 * - **API ID**: `divider`
 * - **Description**: Divider
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type DividerSlice = prismic.SharedSlice<
  "divider",
  DividerSliceVariation
>;

/**
 * Primary content in *EmailSignupForm → Default → Primary*
 */
export interface EmailSignupFormSliceDefaultPrimary {
  /**
   * Heading field in *EmailSignupForm → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: email_signup_form.default.primary.heading
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  heading: prismic.KeyTextField;

  /**
   * Description field in *EmailSignupForm → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: email_signup_form.default.primary.description
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  description: prismic.RichTextField;

  /**
   * Klaviyo Form ID field in *EmailSignupForm → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: email_signup_form.default.primary.klaviyo_form_id
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  klaviyo_form_id: prismic.KeyTextField;

  /**
   * Background Colour field in *EmailSignupForm → Default → Primary*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: email_signup_form.default.primary.background_colour
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  background_colour: prismic.ContentRelationshipField<"background_colour">;
}

/**
 * Default variation for EmailSignupForm Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type EmailSignupFormSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<EmailSignupFormSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *EmailSignupForm*
 */
type EmailSignupFormSliceVariation = EmailSignupFormSliceDefault;

/**
 * EmailSignupForm Shared Slice
 *
 * - **API ID**: `email_signup_form`
 * - **Description**: EmailSignupForm
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type EmailSignupFormSlice = prismic.SharedSlice<
  "email_signup_form",
  EmailSignupFormSliceVariation
>;

/**
 * Primary content in *HeroBanner → Default → Primary*
 */
export interface HeroBannerSliceDefaultPrimary {
  /**
   * Heading field in *HeroBanner → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_banner.default.primary.heading
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  heading: prismic.KeyTextField;

  /**
   * Description field in *HeroBanner → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_banner.default.primary.description
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  description: prismic.RichTextField;

  /**
   * Call To Action field in *HeroBanner → Default → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_banner.default.primary.call_to_action
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  call_to_action: prismic.Repeatable<
    prismic.LinkField<
      string,
      string,
      unknown,
      prismic.FieldState,
      "Primary" | "Secondary"
    >
  >;

  /**
   * Background Image field in *HeroBanner → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_banner.default.primary.background_image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  background_image: prismic.ImageField<never>;

  /**
   * Overlay Colour field in *HeroBanner → Default → Primary*
   *
   * - **Field Type**: Color
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_banner.default.primary.overlay_colour
   * - **Documentation**: https://prismic.io/docs/field#color
   */
  overlay_colour: prismic.ColorField;

  /**
   * Overlay Opacity field in *HeroBanner → Default → Primary*
   *
   * - **Field Type**: Number
   * - **Placeholder**: A percentage of how transparent the colour overlay appears
   * - **API ID Path**: hero_banner.default.primary.overlay_opacity
   * - **Documentation**: https://prismic.io/docs/field#number
   */
  overlay_opacity: prismic.NumberField;
}

/**
 * Default variation for HeroBanner Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeroBannerSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<HeroBannerSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *HeroBanner*
 */
type HeroBannerSliceVariation = HeroBannerSliceDefault;

/**
 * HeroBanner Shared Slice
 *
 * - **API ID**: `hero_banner`
 * - **Description**: HeroBanner
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeroBannerSlice = prismic.SharedSlice<
  "hero_banner",
  HeroBannerSliceVariation
>;

/**
 * Primary content in *ImageText → Image on LEFT → Primary*
 */
export interface ImageTextSliceDefaultPrimary {
  /**
   * Image field in *ImageText → Image on LEFT → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: image_text.default.primary.image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Round Image field in *ImageText → Image on LEFT → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: image_text.default.primary.round_image
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  round_image: prismic.BooleanField;

  /**
   * Copy field in *ImageText → Image on LEFT → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: image_text.default.primary.copy
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  copy: prismic.RichTextField;

  /**
   * Background Colour field in *ImageText → Image on LEFT → Primary*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: image_text.default.primary.background_colour
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  background_colour: prismic.ContentRelationshipField<"background_colour">;
}

/**
 * Image on LEFT variation for ImageText Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ImageTextSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<ImageTextSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *ImageText → Image on RIGHT → Primary*
 */
export interface ImageTextSliceImageOnRightPrimary {
  /**
   * Copy field in *ImageText → Image on RIGHT → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: image_text.imageOnRight.primary.copy
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  copy: prismic.RichTextField;

  /**
   * Image field in *ImageText → Image on RIGHT → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: image_text.imageOnRight.primary.image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Round Image field in *ImageText → Image on RIGHT → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: image_text.imageOnRight.primary.round_image
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  round_image: prismic.BooleanField;

  /**
   * Background Colour field in *ImageText → Image on RIGHT → Primary*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: image_text.imageOnRight.primary.background_colour
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  background_colour: prismic.ContentRelationshipField<"background_colour">;
}

/**
 * Image on RIGHT variation for ImageText Slice
 *
 * - **API ID**: `imageOnRight`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ImageTextSliceImageOnRight = prismic.SharedSliceVariation<
  "imageOnRight",
  Simplify<ImageTextSliceImageOnRightPrimary>,
  never
>;

/**
 * Slice variation for *ImageText*
 */
type ImageTextSliceVariation =
  | ImageTextSliceDefault
  | ImageTextSliceImageOnRight;

/**
 * ImageText Shared Slice
 *
 * - **API ID**: `image_text`
 * - **Description**: ImageText
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ImageTextSlice = prismic.SharedSlice<
  "image_text",
  ImageTextSliceVariation
>;

/**
 * Primary content in *TextBlock → Default → Primary*
 */
export interface TextBlockSliceDefaultPrimary {
  /**
   * Text field in *TextBlock → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: text_block.default.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * Background Colour field in *TextBlock → Default → Primary*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: text_block.default.primary.background_colour
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  background_colour: prismic.ContentRelationshipField<"background_colour">;
}

/**
 * Default variation for TextBlock Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TextBlockSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<TextBlockSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *TextBlock*
 */
type TextBlockSliceVariation = TextBlockSliceDefault;

/**
 * TextBlock Shared Slice
 *
 * - **API ID**: `text_block`
 * - **Description**: TextBlock
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TextBlockSlice = prismic.SharedSlice<
  "text_block",
  TextBlockSliceVariation
>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      BackgroundColourDocument,
      BackgroundColourDocumentData,
      BlogPostDocument,
      BlogPostDocumentData,
      BlogPostDocumentDataSlicesSlice,
      HomepageDocument,
      HomepageDocumentData,
      HomepageDocumentDataSlicesSlice,
      PageDocument,
      PageDocumentData,
      PageDocumentDataSlicesSlice,
      AllDocumentTypes,
      CardsSlice,
      CardsSliceDefaultPrimaryCardItem,
      CardsSliceDefaultPrimary,
      CardsSliceVariation,
      CardsSliceDefault,
      CarouselSlice,
      CarouselSliceDefaultPrimarySlideItem,
      CarouselSliceDefaultPrimary,
      CarouselSliceVariation,
      CarouselSliceDefault,
      DividerSlice,
      DividerSliceVariation,
      DividerSliceDefault,
      EmailSignupFormSlice,
      EmailSignupFormSliceDefaultPrimary,
      EmailSignupFormSliceVariation,
      EmailSignupFormSliceDefault,
      HeroBannerSlice,
      HeroBannerSliceDefaultPrimary,
      HeroBannerSliceVariation,
      HeroBannerSliceDefault,
      ImageTextSlice,
      ImageTextSliceDefaultPrimary,
      ImageTextSliceImageOnRightPrimary,
      ImageTextSliceVariation,
      ImageTextSliceDefault,
      ImageTextSliceImageOnRight,
      TextBlockSlice,
      TextBlockSliceDefaultPrimary,
      TextBlockSliceVariation,
      TextBlockSliceDefault,
    };
  }
}
